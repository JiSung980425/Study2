인공지능
    - 인간과 컴퓨터는 각각 장점과 약점을 가지고 있다. 인공지능이 탑재된 컴퓨터는 논리적으로 추론할 수도 있으며 학습도 가능하다. 인간은 계산은 늦지만 창의적으로 문제를 해결할 수 있다.
    - 인간의 인지적인 기능을 흉내 내어서 문제를 해결하기 위하여 학습하고 이해하는 기계

    인공지능의 특징
        - 학습 : 과거의 패턴들로부터 학습할 수 있는 능력을 가지고 있다
        - 문제 해결 : 복잡한 문제를 분석하고 해결할 수 있는 능력을 가지고 있다
        - 빅데이터 : 아주 큰 용량의 변화하는 데이터를 처리할 수 있다
        - 추론 : 주위의 상황으로부터 추론할 수 있는 능력을 가지고 있다
    
    인공지능은 연구자들마다 정의가 다르다
        - "인간처럼 사고하기"
        - "합리적으로 사고하기"
        - "인간처럼 행동하기"
        - "합리적으로 행동하기"
    
    인공지능 vs 기계학습 vs 딥러닝
        인공지능 : 인간처럼 학습하고 추론하는 프로그램 연구
        기계학습 : 인공지능의 한 분야로서 프로그래밍 없이 스스로 학습하는 프로그램 연구
        딥러닝 : 인공 신경망 등을 사용하여 빅데이터로부터 학습하는 프로그램 연구
    
    데이터를 지식으로 바꾸는 지능적인 시스템 구축
        - 데이터에서 지식을 추출하여 예측하는 자기 학습 알고리즘과 관련된 인공 지능의 하위 분야로 머신러닝이 출현
        - 사람이 수동으로 대량의 데이터를 분석하여 규칙을 유도하고 모델을 만듦
        - 머신러닝이 데이터에서 더 효율적으로 지식을 추출하여 예측 모델과 데이터 기반의 의사 결정 성능을 점진적으로 향상시킬 수 있음
        - 컴퓨터 과학 연구에서 머신러닝은 점점 더 중요해지며, 우리 일상생활에서도 아주 큰 역할을 하고 있음
        - 머신러닝 덕택에 견고한 이메일 스팸 필터, 편리한 텍스트와 음성 인식 소프트웨어, 믿을 수 있는 웹 검색 엔진, 체스 대결 프로그램을 사용

머신러닝
    - 현재의 컴퓨터는 스스로 학습할 수 없기 때문에 우리가 컴퓨터에게 어떤 작업을 시키려면 반드시 프로그램을 작성하여 작업을 지시하여야 한다
    - 컴퓨터가 스스로 학습할 수 있다면 컴퓨터는 프로그램 없이도 여러 가지 일을 할 수 있을 것이다

    - 복잡한 데이터들이 있고, 이들 데이터에 기반하여 결정을 내려야 하는 분야이다
        * 영상 인식, 음성 인식처럼 프로그램으로 작성하기에는 규칙과 공식이 너무 복잡할 때
        * 주식 거래나 에너지 수요 예측, 쇼핑 추세 예측의 경우처럼 데이터 특징이 계속 바뀌고 프로그램을 계속해서 변경해야 하는 상황일 때
        * 구매자가 클릭할 확률이 가장 높은 광고가 무엇인지를 알아내는 시스템
        * 넷플릭스에서 비디오 추천 시스템
        * 자율 주행자동차
    
    머신러닝의 개념
        - 데이터를 컴퓨터에 학습시켜 그 패턴과 규칙을 컴퓨터가 스스로 학습하도록 만드는 기술
        - 이전에는 사람이 지식을 직접 데이터베이스화한 후 컴퓨터가 처리하도록 프로그램 만듦
        - 머신러닝은 데이터를 분류하는 수학적 모델을 프로그래밍하여, 데이터만 입력하면 이미 만들어진 수학 모델이 규칙으로 적용되어 여러 문제를 풀 수 있음
    
    딥러닝
        - 머신러닝 기법 중 신경망을 기반으로 사물이나 데이터를 군집화하거나 분류하는 데 사용하는 기술
    
    빅데이터 
        - 기존의 데이터베이스로는 수집, 저장, 분석을 수행하기 어려울 만큼 방대한 양의 데이터
        - 데이터베이스에서 기원
    
    빅데이터 시스템
        - 빅데이터를 다루기 위한 시스템
    
    빅데이터 엔지니어링
        - 빅데이터를 다루는 방법
        - 머신러닝과 별개로 발전해왔으나 대용량 데이터가 학습 성능에 크게 영향을 미치는 오늘날 머신러닝 분야에서 의미있게 사용됨

    GFS
        - 구글의 거대한 검색 시스템을 여러 대의 컴퓨터에 데이터를 분산해서 저장 및 관리하기 위해 설계된 시스템
    
    맵리듀스
        - 분산되어 저장된 데이터를 여러 대의 컴퓨터가 동시에 협력해서 처리하는 방법을 알려준 시스템
    
    하둡
        - 구글의 분산 처리 시스템 개념이 확장되어 개발된 시스템
    
    머신러닝(기계학습)
        - 데이터를 입력해 규칙을 얻음
        - 분류와 회귀 문제 해결
        - 의사결정트리, 서포트벡터머신, 인공신경망(딥러닝)
    
    머신러닝의 기본모형
        y = f(x)
    
    가지고 있는 데이터 x를 우리가 학습하여 생성한 함수 f에 넣으면 그 결과로 어떤 문제에 대한 예측치를 생성
    머신러닝은 우리가 찾고자 하는 f를 제공

    지도학습(supervised learning)
        - 문제와 답을 함께 학습
            * 회귀 : 연속형 값인 y의 특징을 찾아 데이터 x를 사용하여 y값을 예측하는 기법
            * 분류 : 이산형 값인 y의 특징을 찾아 데이터 x를 사용하여 y값을 예측하는 기법
    
    비지도학습(unsupervised learning)
        - 조력자의 도움 없이 컴퓨터 스스로 학습, 컴퓨터가 훈련 데이터를 이용하여 데이터들 간의 규칙성을 찾아냄
            * 군집 : y 값이 주어지지 않고, 데이터의 특징이 유사한 값들의 모임을 군집으로 표현하는 기법

    강화학습
        - 컴퓨터가 세상에 존재하는 규칙을 스스로 시뮬레이션하면서 게임처럼 규칙을 학습

    머신러닝의 4가지 단계
        - 훈련 데이터 수집
        - 입력 데이터 분석 및 준비
        - 학습
        - 예측 및 테스트

    특징을 선택할 때
        - 50%에 가까운 확률을 가지는 특징들은 제외
        - 개체들을 구분하는 데 효과가 없는 중복된 특징들도 제외
        - 확실하게 개체들을 독립적으로 구분할 수 있는 특징들을 선택
        - 다수 개의 특징들을 사용하면 더욱 효과적

    레이블
        - y=f(x)에서 y 변수에 해당한다
        - 예를 들어서 농작물의 향후 가격, 사진에 표시되는 동물의 종류 등

    샘플 또는 예제
        - 샘플은 기계 학습에 주어지는 특정한 예이다. x에 해당한다 레이블이 있는 샘플도 있고 레이블이 없는 샘플도 있다

    데이터수집
        - 입력 특징을 2차원 리스트로 feature 변수에 저장
        - 결과는 labels 변수에 리스트형으로 저장

    데이터 준비 및 분석
        - 표면의 상태를 문자열에서 숫자로 변환해야 함
        - features에서 "울퉁불퉁"은 0으로, "매끈"은 1로 지정
        - labels에서 "오렌지"는 0으로, "사과"는 1로 설정

    결정트리 학습 모델
        - 어떤 항목에 대한 목표값을 연결해주는 예측 모델로써 결정트리를 사용하는 방식
        - 의사결정 규칙과 그 결과들을 트리 구조로 생성

    분류자 생성
        - sklearn에서 제공하는 DecisionTreeClassfier()를 이용
        - 초기에는 아무런 규칙이 없으나 입력된 훈련 데이터의 규칙을 파악하여 규칙을 생성
        - clf.fit(features, labels)에 의해 실행
        - features와 labels로 훈련한 결과를 tree 형태의 구분자로 생성
                